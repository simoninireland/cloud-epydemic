# -*- mode: k8s; -*-
#
# Kubernetes deployment for cloud-epydemic
#
# Copyright (C) 2023 Simon Dobson
#
# This file is part of cloud-epydemic, network simulation as a service
#
# cloud-epydemic is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published byf
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# cloud-epydemic is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with cloud-epydemic. If not, see <http://www.gnu.org/licenses/gpl.html>.

apiVersion: v1
kind: Namespace
metadata:
  name: cloudepydemic
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: micro-engine
  namespace: cloudepydemic
  labels:
    app: cluster
    component: engine
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cluster
      component: engine
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: cluster
        component: engine
    spec:
      containers:
      - name: micro-engine
        image: simoninireland/micro-engine:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 5000
      - name: micro-engine-rabbitmq-shim
        image: simoninireland/micro-engine-rabbitmq-shim:latest
        imagePullPolicy: Never
        env:
        - name: EPYDEMIC_ENGINE_API_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: config
              key: engine.endpoint
        - name: RABBITMQ_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: config
              key: broker.endpoint
        - name: RABBITMQ_REQUEST_QUEUE
          valueFrom:
            configMapKeyRef:
              name: config
              key: broker.queues.request
        - name: RABBITMQ_RESULT_QUEUE
          valueFrom:
            configMapKeyRef:
              name: config
              key: broker.queues.result
---
apiVersion: v1
kind: Service
metadata:
  name: micro-engine-service
  namespace: cloudepydemic
  labels:
    app: cluster
    component: engine-service
spec:
  selector:
    app: cluster
    component: engine
  ports:
  - port: 5000
---
apiVersion: rabbitmq.com/v1beta1
kind: RabbitmqCluster
metadata:
  name: broker
  namespace: cloudepydemic
  labels:
    app: cluster
    component: message-broker
spec:
  replicas: 1
  resources:
    requests:
      cpu: 1
      memory: 256M
    limits:
      cpu: 1
      memory: 1Gi
  rabbitmq:
    additionalConfig: |
      cluster_partition_handling = pause_minority
      vm_memory_high_watermark_paging_ratio = 0.99
      disk_free_limit.relative = 1.0
      collect_statistics_interval = 10000
  persistence:
    storageClassName: standard
    storage: "50M"
  service:
    type: NodePort
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: config
  namespace: cloudepydemic
  labels:
    app: cluster
    component: cluster-config
data:
  engine.endpoint: http://localhost:5000/api/v1  # access web API from shim (in the same pod)
  broker.endpoint: amqp://broker:5672
  broker.queues.request: request
  broker.queues.result: result
